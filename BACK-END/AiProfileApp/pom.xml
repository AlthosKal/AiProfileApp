<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example.back-end</groupId>
	<artifactId>AiProfileApp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>AiProfileApp</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>21</java.version>

		<!-- Dependency Versions -->
		<postgresql.version>42.6.0</postgresql.version>
		<resilience4j.version>2.1.0</resilience4j.version>
		<springdoc-openapi.version>2.7.0</springdoc-openapi.version>
		<jansi.version>2.4.0</jansi.version>
		<junit.version>5.11.4</junit.version>
		<mockito.version>5.4.0</mockito.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<lombok.version>1.18.32</lombok.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<sendgrid-java.version>4.9.3</sendgrid-java.version>
		<jwt.version>0.11.5</jwt.version>
		<dotenv-java.version>2.3.2</dotenv-java.version>
		<cloudinary.version>1.32.0</cloudinary.version>
		<quickperf.version>1.1.0</quickperf.version>
		<hamcrest.version>2.2</hamcrest.version>
		<hibernate-validator.version>8.0.1.Final</hibernate-validator.version>
		<junit-platform-launcher.version>1.8.2</junit-platform-launcher.version>
		<jakarta-validation.version>3.0.2</jakarta-validation.version>
		<hibernate.types.version>2.21.1</hibernate.types.version>
		<poi-ooxml.version>5.3.0</poi-ooxml.version>

		<!-- Plugin Versions -->
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
		<formatter-maven-plugin.version>2.24.1</formatter-maven-plugin.version>
		<jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>

		<!-- Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-60</artifactId>
			<version>${hibernate.types.version}</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
			<version>${lombok.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jwt.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta-validation.version}</version>
		</dependency>

		<!-- Resilience4j para manejo de fallos y resiliencia -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-boot3</artifactId>
			<version>${resilience4j.version}</version>
		</dependency>

		<!-- Documentación de API con OpenAPI -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi.version}</version>
		</dependency>

		<!-- Biblioteca para mejorar los mensajes de consola -->
		<dependency>
			<groupId>org.fusesource.jansi</groupId>
			<artifactId>jansi</artifactId>
			<version>${jansi.version}</version>
		</dependency>

		<!--Dotenv para la inyección de credenciales -->
		<dependency>
			<groupId>io.github.cdimascio</groupId>
			<artifactId>dotenv-java</artifactId>
			<version>${dotenv-java.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sendgrid</groupId>
			<artifactId>sendgrid-java</artifactId>
			<version>${sendgrid-java.version}</version>
		</dependency>

		<!--API de Cloudinary-->
		<dependency>
			<groupId>com.cloudinary</groupId>
			<artifactId>cloudinary-core</artifactId>
			<version>${cloudinary.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${poi-ooxml.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.quickperf</groupId>
			<artifactId>quick-perf-junit5</artifactId>
			<version>${quickperf.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>${junit-platform-launcher.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.cloudinary</groupId>
			<artifactId>cloudinary-http44</artifactId>
			<version>${cloudinary.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpmime</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version> <!-- o la versión que prefieras unificar -->
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>4.5.13</version> <!-- para garantizar también la convergencia de httpmime -->
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- Sección de configuración de construcción del proyecto -->
	<build>
		<plugins>
			<!-- Plugin para manejar dependencias de Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
			</plugin>

			<!-- Plugin para empaquetar la aplicación Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal> <!-- Reempaquetado para hacer un JAR ejecutable -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin para formatear el código automáticamente -->
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>${formatter-maven-plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding> <!-- Se define la codificación de caracteres -->
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal> <!-- Objetivo de formatear el código -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin para imponer reglas de calidad y versiones de dependencias -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-version</id>
						<goals>
							<goal>enforce</goal> <!-- Impone reglas sobre versiones de dependencias y Java -->
						</goals>
						<configuration>
							<rules>
								<dependencyConvergence/> <!-- Asegura que las versiones de dependencias sean consistentes -->
								<requireJavaVersion>
									<version>${java.version}</version> <!-- Verifica que la versión de Java sea la correcta -->
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin para la compilación del código Java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source> <!-- Versión de Java para el código fuente -->
					<target>${java.version}</target> <!-- Versión de Java para el código compilado -->
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
